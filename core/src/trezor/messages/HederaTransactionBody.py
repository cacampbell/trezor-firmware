# Automatically generated by pb2py
# fmt: off
import protobuf as p

from .HederaCryptoCreateTransactionBody import HederaCryptoCreateTransactionBody
from .HederaCryptoTransferTransactionBody import HederaCryptoTransferTransactionBody
from .HederaTokenAssociateBody import HederaTokenAssociateBody
from .HederaTransactionID import HederaTransactionID

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class HederaTransactionBody(p.MessageType):

    def __init__(
        self,
        *,
        transactionID: HederaTransactionID = None,
        transactionFee: int = None,
        memo: str = None,
        cryptoCreateAccount: HederaCryptoCreateTransactionBody = None,
        cryptoTransfer: HederaCryptoTransferTransactionBody = None,
        tokenAssociate: HederaTokenAssociateBody = None,
    ) -> None:
        self.transactionID = transactionID
        self.transactionFee = transactionFee
        self.memo = memo
        self.cryptoCreateAccount = cryptoCreateAccount
        self.cryptoTransfer = cryptoTransfer
        self.tokenAssociate = tokenAssociate

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('transactionID', HederaTransactionID, None),
            3: ('transactionFee', p.UVarintType, None),
            6: ('memo', p.UnicodeType, None),
            11: ('cryptoCreateAccount', HederaCryptoCreateTransactionBody, None),
            14: ('cryptoTransfer', HederaCryptoTransferTransactionBody, None),
            40: ('tokenAssociate', HederaTokenAssociateBody, None),
        }
